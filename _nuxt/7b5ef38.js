(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{235:function(e,t,n){var r=n(3);e.exports=r(1..valueOf)},237:function(e,t,n){n(271)("Float32",(function(e){return function(data,t,n){return e(this,data,t,n)}}))},238:function(e,t,n){"use strict";var r=n(6),o=n(1),l=n(3),h=n(44),d=n(235),v=n(179),c=n(4),f=o.RangeError,m=o.String,y=Math.floor,x=l(v),E=l("".slice),_=l(1..toFixed),M=function(e,t,n){return 0===t?n:t%2==1?M(e,t-1,n*e):M(e*e,t/2,n)},A=function(data,e,t){for(var n=-1,r=t;++n<6;)r+=e*data[n],data[n]=r%1e7,r=y(r/1e7)},T=function(data,e){for(var t=6,n=0;--t>=0;)n+=data[t],data[t]=y(n/e),n=n%e*1e7},w=function(data){for(var e=6,s="";--e>=0;)if(""!==s||0===e||0!==data[e]){var t=m(data[e]);s=""===s?t:s+x("0",7-t.length)+t}return s};r({target:"Number",proto:!0,forced:c((function(){return"0.000"!==_(8e-5,3)||"1"!==_(.9,0)||"1.25"!==_(1.255,2)||"1000000000000000128"!==_(0xde0b6b3a7640080,0)}))||!c((function(){_({})}))},{toFixed:function(e){var t,n,r,o,l=d(this),v=h(e),data=[0,0,0,0,0,0],c="",y="0";if(v<0||v>20)throw f("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return m(l);if(l<0&&(c="-",l=-l),l>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(l*M(2,69,1))-69)<0?l*M(2,-t,1):l/M(2,t,1),n*=4503599627370496,(t=52-t)>0){for(A(data,0,n),r=v;r>=7;)A(data,1e7,0),r-=7;for(A(data,M(10,r,1),0),r=t-1;r>=23;)T(data,1<<23),r-=23;T(data,1<<r),A(data,1,1),T(data,2),y=w(data)}else A(data,0,n),A(data,1<<-t,0),y=w(data)+x("0",v);return y=v>0?c+((o=y.length)<=v?"0."+x("0",v-o)+y:E(y,0,o-v)+"."+E(y,o-v)):c+y}})},265:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(108);var o=n(137),l=n(75);function h(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||Object(o.a)(e)||Object(l.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},274:function(e,t,n){"use strict";var r=n(11),o=n(1),l=n(3),h=n(103),d=n(16),v=n(13),c=n(178),f=n(35),m=n(104),y=n(180),x=n(4),E=n(67).f,_=n(28).f,M=n(15).f,A=n(235),T=n(275).trim,w="Number",S=o.Number,R=S.prototype,F=o.TypeError,D=l("".slice),k=l("".charCodeAt),P=function(e){var t=y(e,"number");return"bigint"==typeof t?t:N(t)},N=function(e){var t,n,r,o,l,h,d,code,v=y(e,"number");if(m(v))throw F("Cannot convert a Symbol value to a number");if("string"==typeof v&&v.length>2)if(v=T(v),43===(t=k(v,0))||45===t){if(88===(n=k(v,2))||120===n)return NaN}else if(48===t){switch(k(v,1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+v}for(h=(l=D(v,2)).length,d=0;d<h;d++)if((code=k(l,d))<48||code>o)return NaN;return parseInt(l,r)}return+v};if(h(w,!S(" 0o1")||!S("0b1")||S("+0x1"))){for(var L,C=function(e){var t=arguments.length<1?0:S(P(e)),n=this;return f(R,n)&&x((function(){A(n)}))?c(Object(t),n,C):t},I=r?E(S):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),U=0;I.length>U;U++)v(S,L=I[U])&&!v(C,L)&&M(C,L,_(S,L));C.prototype=R,R.constructor=C,d(o,w,C)}},275:function(e,t,n){var r=n(3),o=n(20),l=n(12),h=n(276),d=r("".replace),v="["+h+"]",c=RegExp("^"+v+v+"*"),f=RegExp(v+v+"*$"),m=function(e){return function(t){var n=l(o(t));return 1&e&&(n=d(n,c,"")),2&e&&(n=d(n,f,"")),n}};e.exports={start:m(1),end:m(2),trim:m(3)}},276:function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},323:function(e,t,n){var content=n(360);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(100).default)("dcabb95e",content,!0,{sourceMap:!1})},359:function(e,t,n){"use strict";n(323)},360:function(e,t,n){var r=n(99)(!1);r.push([e.i,"#main_container[data-v-c931d474]{background-color:#3a3a98;height:100vh;width:100vw;padding:1rem;box-sizing:border-box;display:grid;grid-template-rows:1fr 1fr 14fr 1fr}#home-link[data-v-c931d474]{color:#fff;grid-row:1;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}#planet_adders[data-v-c931d474]{grid-row:2}#add_planet[data-v-c931d474],#file_upload[data-v-c931d474]{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}#add_planet[data-v-c931d474]{margin-left:10em}#animation_container[data-v-c931d474]{grid-row:3;display:flex;justify-content:center}canvas[data-v-c931d474]{width:100%;max-width:90%;max-height:90%}",""]),e.exports=r},408:function(e,t,n){"use strict";n.r(t);var r=n(2),o=n(131),l=n(132),h=(n(238),n(19),n(33),n(230));n(177),n(54),n(39),n(55),n(42),n(26),n(34),n(56),n(57),n(43);var d=["basic"];function v(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,h=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return l=e.done,e},e:function(e){h=!0,o=e},f:function(){try{l||null==n.return||n.return()}finally{if(h)throw o}}}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var f=function(){function e(){var data=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;Object(o.a)(this,e),this.data={type:"terrestrial1",radius:1,globalMinHeight:0,seed:Math.floor(9999*Math.random()),noiseLayers:[],debugNoise:!1,materialId:"XRRVZX#49",materialHeightMultiplier:1},data&&(this.data=data)}return Object(l.a)(e,[{key:"getData",value:function(){return this.data}},{key:"setData",value:function(data){this.data=data}},{key:"addNoiseLayer",value:function(){var e=this.data.noiseLayers.length;this.data.noiseLayers.push(function(e){return{noiseType:"basic",amplitude:1,minHeight:0,scale:1,octaves:1,persistance:.5,lacunarity:2,exponent:1,usePrevLayerAsMask:!1,useFirstLayerAsMask:!1,maskOnly:!1,maskMultiplier:1,index:e}}(e)),this.updateNoiseFolder()}},{key:"removeNoiseLayer",value:function(e){var t=this.data.noiseLayers.indexOf(e);this.data.noiseLayers.splice(t,1),this.updateNoiseFolder()}},{key:"updateNoiseFolder",value:function(){var e=this;if(this.gui){this.noise_folder&&this.gui.removeFolder(this.noise_folder),this.noise_folder=this.gui.addFolder("noise layers"),this.noise_folder.add(this.data,"debugNoise");var t,n=v(this.data.noiseLayers);try{var r=function(){var n=t.value,r=function(data,e,t){var n=e.addFolder(t),r=n.addFolder("generation options");r.add(data,"amplitude",.01,5,.01),r.add(data,"scale",.1,5,.01),r.add(data,"minHeight",-1,1,.001),r.add(data,"octaves",1,10,1),r.add(data,"persistance",.1,1,.001),r.add(data,"lacunarity",1,10,.1),r.add(data,"exponent",1,5,1),r.open();var o=n.addFolder("mask options");return o.add(data,"maskMultiplier",.1,10,.1),o.add(data,"maskOnly"),o.add(data,"usePrevLayerAsMask"),o.add(data,"useFirstLayerAsMask"),n}(n,e.noise_folder,"layer [".concat(n.index,"]")),o=e.removeNoiseLayer.bind(e);r.add({remove:function(){o(n)}},"remove")};for(n.s();!(t=n.n()).done;)r()}catch(e){n.e(e)}finally{n.f()}}}},{key:"generateGuiFolder",value:function(e){this.gui=e;var t=e.addFolder("planet data");t.add(this.data,"radius",.1,2,.01),t.add(this.data,"seed",0,9999),t.add(this.data,"materialHeightMultiplier",0,1,.01),t.add(this,"addNoiseLayer"),this.updateNoiseFolder()}},{key:"downloadJson",value:function(){var e,text,element;e="planet_data.json",text=JSON.stringify(this.getData()),(element=document.createElement("a")).setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(text)),element.setAttribute("download",e),element.style.display="none",document.body.appendChild(element),element.click(),document.body.removeChild(element)}}]),e}(),m=n(265),y=(n(66),n(101),n(45),n(270));n(274),n(239),n(237),n(240),n(241),n(242),n(243),n(244),n(245),n(246),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262);var x=function(){function e(t){var n=t.gl,r=t.height,l=t.width;if(Object(o.a)(this,e),this.framebuffer=null,this.program=null,this.ready=!1,this.height=r,this.width=l,this.attribs={},this.uniforms={},this.textures=[],this.standardGeometryVals=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]),this.standardVertex="\n            attribute vec3 position;\n            attribute vec2 textureCoord;\n            varying highp vec2 vTextureCoord;\n            void main() {\n                gl_Position = vec4(position, 1.0);\n                vTextureCoord = textureCoord;\n            }\n        ",n)this.gl=n,this.height=n.drawingBufferHeight,this.width=n.drawingBufferWidth;else{var canvas=document.createElement("canvas");canvas.width=l,canvas.height=r,this.gl=canvas.getContext("webgl",{premultipliedAlpha:!1})}this.gl.getExtension("OES_texture_float")||alert("Floating point textures not supported")}return Object(l.a)(e,[{key:"makeTexture",value:function(data){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.width,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.height;this.textures.push({tex:this.gl.createTexture(),width:e,height:t}),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[this.textures.length-1].tex),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.FLOAT,data)}},{key:"updateTexture",value:function(data){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.textures[e];this.gl.bindTexture(this.gl.TEXTURE_2D,t.tex),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t.width,t.height,0,this.gl.RGBA,this.gl.FLOAT,data)}},{key:"makeFrameBuffer",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.width,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.height,n=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,n),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.FLOAT,null),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.framebuffer=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,n,0);var r=this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);if(r!=this.gl.FRAMEBUFFER_COMPLETE)switch(r){case this.gl.FRAMEBUFFER_UNSUPPORTED:throw"FRAMEBUFFER_UNSUPPORTED";case this.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case this.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case this.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";default:throw"Framebuffer error: ".concat(r)}}},{key:"buildProgram",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.standardVertex;this.program=this.gl.createProgram();var n=this.compileShader(t,this.gl.VERTEX_SHADER),r=this.compileShader(e,this.gl.FRAGMENT_SHADER);this.gl.attachShader(this.program,n),this.gl.attachShader(this.program,r),this.gl.linkProgram(this.program),this.gl.deleteShader(r),this.gl.deleteShader(n),this.gl.useProgram(this.program);var o=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.standardGeometryVals,this.gl.STATIC_DRAW)}},{key:"compileShader",value:function(source,e){var t=this.gl.createShader(e);if(this.gl.shaderSource(t,source),this.gl.compileShader(t),!this.gl.getShaderParameter(t,this.gl.COMPILE_STATUS))throw"".concat(e," compilation failed: ").concat(this.gl.getShaderInfoLog(t));return t}},{key:"addAttrib",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.numElements,r=void 0===n?3:n,o=t.stride,l=void 0===o?20:o,h=t.offset,d=void 0===h?0:h;this.gl.useProgram(this.program),this.attribs[e]=this.gl.getAttribLocation(this.program,e),this.gl.enableVertexAttribArray(this.attribs[e]),this.gl.vertexAttribPointer(this.attribs[e],r,this.gl.FLOAT,!1,l,d)}},{key:"addUniform",value:function(e){var t=e.name,n=e.type,r=e.value;this.uniforms[t]=this.gl.getUniformLocation(this.program,t),null!=r&&this.gl[n](this.uniforms[t],r)}},{key:"draw",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.textures[this.textures.length-1];if(this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,e.tex),!this.ready){this.ready=!0,this.addUniform({name:"texture0",value:0,type:"uniform1i"});for(var t=e==this.textures[this.textures.length-1]?this.textures.length-1:this.textures.length,n=0;n<t;n++)this.gl.activeTexture(this.gl["TEXTURE".concat(n+1)]),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[n].tex),this.addUniform({name:"texture".concat(n+1),value:n+1,type:"uniform1i"});this.gl.activeTexture(this.gl.TEXTURE0)}this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}},{key:"getPixels",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.width-e,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.height-t,o=new Float32Array(n*r*4);return this.gl.readPixels(e,t,n,r,this.gl.RGBA,this.gl.FLOAT,o),o}},{key:"delete",value:function(){var e;this.gl.deleteProgram(this.program),this.gl.deleteFramebuffer(this.framebuffer);for(var t=0;t<this.textures.length;t++)this.gl.deleteTexture(this.textures[t].tex),this.textures.splice(t,1);null===(e=this.gl.getExtension("WEBGL_lose_context"))||void 0===e||e.loseContext()}}]),e}(),E={vertexSource:"\n      attribute vec3 position;\n      attribute vec2 textureCoord;\n\n      varying highp vec2 vTextureCoord;\n\n      void main() {\n          // NON TOCCARE\n          gl_Position = vec4(position, 1.0);\n          vTextureCoord = textureCoord;\n          // ===========\n      }\n    ",fragmentSource:"\n      precision highp float;\n\n      uniform sampler2D texture;\n      varying vec2 vTextureCoord;\n\n      void main() {\n        gl_FragColor = texture2D(texture, vTextureCoord);\n        // gl_FragColor = vec4(vTextureCoord, 0.3, 0.3);\n        // gl_FragColor = vec4(vPosition, 2.0);\n      }\n    ",uniforms:[]},_=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;Object(o.a)(this,e),this.resolution=10,this.minHeight=0,this.maxHeight=0,this.positionShader=r,this.resolution=n,this.scene=t,this.mesh=this.generateNewMesh()}return Object(l.a)(e,[{key:"getResolution",value:function(){return this.resolution}},{key:"setResolution",value:function(e){this.resolution=e,this.generateNewMesh()}},{key:"getMaterial",value:function(){return this.material}},{key:"setMaterial",value:function(e){this.material=e,this.mesh.material=this.material}},{key:"getPositionShader",value:function(){return this.positionShader}},{key:"setPositionShader",value:function(e){this.positionShader=e}},{key:"updateMesh",value:function(){var e=this;if(this.mesh&&this.GPGPU&&this.originalMeshData){var t=this.GPGPU,n=this.originalMeshData;this.mesh.updateMeshPositions((function(data){e.positionShader.uniforms.forEach((function(e){t.addUniform(e)})),t.draw();for(var r=t.getPixels(),o=Number.MIN_VALUE,l=Number.MAX_VALUE,i=0;i<r.length/4;i++){var h=r[4*i+3];data[3*i+0]=(2*n[4*i+0]-1)/h,data[3*i+1]=(2*n[4*i+1]-1)/h,data[3*i+2]=(2*n[4*i+2]-1)/h,o=Math.max(o,1/h),l=Math.min(l,1/h)}e.minHeight=l,e.maxHeight=o}),!0)}}},{key:"generateNewMesh",value:function(){var e=this,t=h.MeshBuilder.CreateIcoSphere("icosphere",{subdivisions:this.resolution,updatable:!0,flat:!1},this.scene);return this.mesh=t,this.mesh.forceSharedVertices(),this.mesh.updateMeshPositions((function(data){var t=data.length/3*4;e.originalMeshData=new Float32Array(t);for(var i=0;i<data.length/3;i++)e.originalMeshData[4*i+0]=(data[3*i+0]+1)/2,e.originalMeshData[4*i+1]=(data[3*i+1]+1)/2,e.originalMeshData[4*i+2]=(data[3*i+2]+1)/2,e.originalMeshData[4*i+3]=1;if(null==e.meshImageRoot){for(var n=Math.floor(Math.sqrt(t/4));t/4%n!=0;)n-=1;e.meshImageRoot=n}e.GPGPU=new x({width:t/4/e.meshImageRoot,height:e.meshImageRoot}),e.GPGPU.makeFrameBuffer(t/4/e.meshImageRoot,e.meshImageRoot),e.GPGPU.makeTexture(e.originalMeshData),e.GPGPU.buildProgram(e.positionShader.fragmentSource,e.positionShader.vertexSource),e.GPGPU.addAttrib("position",{numElements:3,stride:20,offset:0}),e.GPGPU.addAttrib("textureCoord",{numElements:2,stride:20,offset:12}),e.positionShader.uniforms.forEach((function(t){var n;null===(n=e.GPGPU)||void 0===n||n.addUniform(t)})),e.GPGPU.draw();for(var r=e.GPGPU.getPixels(),o=Number.MIN_VALUE,l=Number.MAX_VALUE,h=0;h<r.length/4;h++){var d=r[4*h+3];data[3*h+0]=(2*e.originalMeshData[4*h+0]-1)/d,data[3*h+1]=(2*e.originalMeshData[4*h+1]-1)/d,data[3*h+2]=(2*e.originalMeshData[4*h+2]-1)/d,o=Math.max(o,1/d),l=Math.min(l,1/d)}e.minHeight=l,e.maxHeight=o}),!0),this.mesh}},{key:"getMesh",value:function(){return this.mesh||this.generateNewMesh()}},{key:"dispose",value:function(){var e;null===(e=this.GPGPU)||void 0===e||e.delete(),this.mesh.dispose()}}]),e}();function M(e,t,n){if(e&&e instanceof h.NodeMaterial){var r=e.getBlockByName(t);if(r&&r instanceof h.InputBlock)return r.value=n,e}}var A=function(){function e(t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new f;Object(o.a)(this,e),this.autoUpdate=!1,this.scene=t,this.planetData=r,this.createGui(),this.icoSphereMesh=new _(this.scene,void 0,this.getPositionShader()),h.NodeMaterial.ParseFromSnippetAsync(this.planetData.getData().materialId,this.scene).then((function(e){M(n.icoSphereMesh.getMaterial(),"INheightMultiplier",n.planetData.getData().materialHeightMultiplier),n.icoSphereMesh.setMaterial(e),n.reload()})),this.updateInterval=setInterval((function(){n.autoUpdate&&n.reload()}),16)}return Object(l.a)(e,[{key:"createGui",value:function(){var e,t,n;this.gui=(e=this.planetData,t=this,(n=new y.a).add(t,"reload"),n.add(t,"autoUpdate"),n.add(e,"downloadJson"),e.generateGuiFolder(n),n.close(),n)}},{key:"destroyGui",value:function(){var e;null===(e=this.gui)||void 0===e||e.destroy()}},{key:"reloadGui",value:function(){this.destroyGui(),this.createGui()}},{key:"setPlanetData",value:function(e){this.planetData.setData(e),this.reloadGui(),this.reload()}},{key:"reload",value:function(){this.icoSphereMesh.setPositionShader(this.getPositionShader()),this.icoSphereMesh.updateMesh(),M(this.icoSphereMesh.getMaterial(),"INheightMultiplier",this.planetData.getData().materialHeightMultiplier),M(this.icoSphereMesh.getMaterial(),"INminHeight",this.icoSphereMesh.minHeight),M(this.icoSphereMesh.getMaterial(),"INmaxHeight",this.icoSphereMesh.maxHeight)}},{key:"getMesh",value:function(){return this.icoSphereMesh.getMesh()}},{key:"dispose",value:function(){var e;this.updateInterval&&clearInterval(this.updateInterval),this.icoSphereMesh.dispose(),null===(e=this.gui)||void 0===e||e.destroy()}},{key:"getPositionShader",value:function(){var e="\n      precision highp float;\n\n      #define MAX_LAYERS 32\n\n      uniform float radius;\n      uniform int debugNoise;\n      uniform int layerAmount;\n      uniform int seed;\n\n      uniform float layerAmplitude[MAX_LAYERS];\n      uniform int layerUsePrev[MAX_LAYERS];\n      uniform int layerUseFirst[MAX_LAYERS];\n      uniform int layerMaskOnly[MAX_LAYERS];\n      uniform float layerScale[MAX_LAYERS];\n      uniform float layerMinHeight[MAX_LAYERS];\n      uniform int layerNoiseType[MAX_LAYERS];\n      uniform float layerMaskMultiplier[MAX_LAYERS];\n      uniform int layerOctaves[MAX_LAYERS];\n      uniform float layerLacunarity[MAX_LAYERS];\n      uniform float layerPersistance[MAX_LAYERS];\n      uniform int layerExponent[MAX_LAYERS];\n\n      uniform sampler2D texture;\n      varying vec2 vTextureCoord;\n\n      ".concat("\nvec4 permute(vec4 i) {\n  vec4 im = mod(i, 289.0);\n  return mod(((im*34.0)+10.0)*im, 289.0);\n}\n\n// https://github.com/stegu/psrdnoise/\nfloat psrdnoise(vec3 x, vec3 period, float alpha, out vec3 gradient) {\n  const mat3 M = mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0,  1.0, 1.0, 0.0);\n  const mat3 Mi = mat3(-0.5, 0.5, 0.5, 0.5,-0.5, 0.5, 0.5, 0.5,-0.5);\n  vec3 uvw = M * x;\n  vec3 i0 = floor(uvw), f0 = fract(uvw);\n  vec3 g_ = step(f0.xyx, f0.yzz), l_ = 1.0 - g_;\n  vec3 g = vec3(l_.z, g_.xy), l = vec3(l_.xy, g_.z);\n  vec3 o1 = min( g, l ), o2 = max( g, l );\n  vec3 i1 = i0 + o1, i2 = i0 + o2, i3 = i0 + vec3(1.0);\n  vec3 v0 = Mi * i0, v1 = Mi * i1, v2 = Mi * i2, v3 = Mi * i3;\n  vec3 x0 = x - v0, x1 = x - v1, x2 = x - v2, x3 = x - v3;\n  if(any(greaterThan(period, vec3(0.0)))) {\n    vec4 vx = vec4(v0.x, v1.x, v2.x, v3.x);\n    vec4 vy = vec4(v0.y, v1.y, v2.y, v3.y);\n    vec4 vz = vec4(v0.z, v1.z, v2.z, v3.z);\n    if(period.x > 0.0) vx = mod(vx, period.x);\n    if(period.y > 0.0) vy = mod(vy, period.y);\n    if(period.z > 0.0) vz = mod(vz, period.z);\n    i0 = floor(M * vec3(vx.x, vy.x, vz.x) + 0.5);\n    i1 = floor(M * vec3(vx.y, vy.y, vz.y) + 0.5);\n    i2 = floor(M * vec3(vx.z, vy.z, vz.z) + 0.5);\n    i3 = floor(M * vec3(vx.w, vy.w, vz.w) + 0.5);\n  }\n  vec4 hash = permute( permute( permute( \n              vec4(i0.z, i1.z, i2.z, i3.z ))\n            + vec4(i0.y, i1.y, i2.y, i3.y ))\n            + vec4(i0.x, i1.x, i2.x, i3.x ));\n  vec4 theta = hash * 3.883222077;\n  vec4 sz = hash * -0.006920415 + 0.996539792;\n  vec4 psi = hash * 0.108705628;\n  vec4 Ct = cos(theta), St = sin(theta);\n  vec4 sz_prime = sqrt( 1.0 - sz*sz );\n  vec4 gx, gy, gz;\n  if(alpha != 0.0) {\n    vec4 px = Ct * sz_prime, py = St * sz_prime, pz = sz;\n    vec4 Sp = sin(psi), Cp = cos(psi), Ctp = St*Sp - Ct*Cp;\n    vec4 qx = mix( Ctp*St, Sp, sz), qy = mix(-Ctp*Ct, Cp, sz);\n    vec4 qz = -(py*Cp + px*Sp);\n    vec4 Sa = vec4(sin(alpha)), Ca = vec4(cos(alpha));\n    gx = Ca*px + Sa*qx; gy = Ca*py + Sa*qy; gz = Ca*pz + Sa*qz;\n  } else {\n    gx = Ct * sz_prime; gy = St * sz_prime; gz = sz;  \n  }\n  vec3 g0 = vec3(gx.x, gy.x, gz.x), g1 = vec3(gx.y, gy.y, gz.y);\n  vec3 g2 = vec3(gx.z, gy.z, gz.z), g3 = vec3(gx.w, gy.w, gz.w);\n  vec4 w = 0.5-vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3));\n  w = max(w, 0.0); vec4 w2 = w * w, w3 = w2 * w;\n  vec4 gdotx = vec4(dot(g0,x0), dot(g1,x1), dot(g2,x2), dot(g3,x3));\n  float n = dot(w3, gdotx);\n  vec4 dw = -6.0 * w2 * gdotx;\n  vec3 dn0 = w3.x * g0 + dw.x * x0;\n  vec3 dn1 = w3.y * g1 + dw.y * x1;\n  vec3 dn2 = w3.z * g2 + dw.z * x2;\n  vec3 dn3 = w3.w * g3 + dw.w * x3;\n  gradient = 39.5 * (dn0 + dn1 + dn2 + dn3);\n  return 39.5 * n;\n}\n","\n\n      ").concat("\nfloat basicNoiseLayer(\n  float minHeight,\n  float amplitude,\n  float scale,\n  float lacunarity,\n  float persistance,\n  int exponent,\n  int octaves,\n  float mask,\n  vec3 position,\n  int seed\n) {\n  const int MAX_OCTAVES = 32;\n\n  vec3 start_pos = scale * position.xyz;\n  float total_elevation = 0.0;\n  float normalization = 0.0;\n  float frequency = 1.0;\n  float G = pow(2.0, -persistance);\n  float ampl = 1.0;\n\n  for(int i = 0; i < MAX_OCTAVES; i++) {\n    if(i >= octaves) { break; }\n\n    vec3 v = start_pos * frequency;\n    vec3 p = vec3(0.0);\n    vec3 g;\n    float alpha = 1.0 * float(seed);\n\n    float noise_value = 0.5 + 0.5 * psrdnoise(v, p, alpha, g);\n    total_elevation += noise_value * ampl;\n    normalization += ampl;\n    ampl *= G;\n    frequency *= lacunarity;\n  }\n\n  total_elevation /= normalization;\n  total_elevation *= amplitude;\n    \n  // elevation = (elevation + 1.0) / 2.0 * amplitude;\n  total_elevation = max(0.0, total_elevation - minHeight);\n  total_elevation = pow(total_elevation, float(exponent));\n\n  return total_elevation * mask;\n}\n","\n\n      void main() {\n        // restoring data from [0,1] -> [0,2] -> [-1,1]\n        vec4 position = (texture2D(texture, vTextureCoord) * 2.0) - 1.0;\n\n        float elevation = 1.0;\n        float base_elevation = 1.0;\n        float prev_elevation = 1.0;\n\n        for(int i = 0; i < MAX_LAYERS; i++) {\n          if(i >= layerAmount) { break; }\n\n          // ---- mask setup\n          float mask = 1.0;\n          if(layerUseFirst[i] == 1)           { mask = base_elevation; }\n          if(layerUsePrev[i] == 1 && i >= 1) { mask = prev_elevation; }\n          // ---------------\n\n          // ---- noise generation\n          float level_elevation = 1.0;\n\n          level_elevation = basicNoiseLayer(layerMinHeight[i], layerAmplitude[i], layerScale[i], layerLacunarity[i], layerPersistance[i], layerExponent[i], layerOctaves[i], mask, position.xyz, seed + i);\n          // ---------------------\n\n          // ---- mask and elevation finalization\n          if(i == 0) { base_elevation = level_elevation * layerMaskMultiplier[i]; }\n\n          if(layerMaskOnly[i] == 0) {\n            prev_elevation = level_elevation * mask * layerMaskMultiplier[i];\n            elevation += level_elevation * mask;\n          } else {\n            prev_elevation = (level_elevation * mask) == 0.0 ? 0.0 : 0.5;\n\n            if(debugNoise == 1){\n              elevation += (level_elevation * mask) == 0.0 ? 0.0 : 0.5; //* for debugging noise only!\n            }\n          }\n          // ------------------------------------\n        }\n\n        // normalizing data from [-1,1] -> [0,2] -> [0,1]\n        vec3 pos = (position.xyz + 1.0) / 2.0;\n\n        gl_FragColor = vec4(pos, 1.0 / (elevation * radius));\n        // gl_FragColor = vec4(pos, 1.0 / layerAmplitude[0]);\n      }\n    "),t={fragmentSource:e,vertexSource:"\n    attribute vec3 position;\n    attribute vec2 textureCoord;\n\n    varying highp vec2 vTextureCoord;\n\n    void main() {\n        gl_Position = vec4(position, 1.0);\n        vTextureCoord = textureCoord;\n    }\n    ",uniforms:[]};return t.uniforms=[{name:"radius",type:"uniform1f",value:this.planetData.getData().radius},{name:"debugNoise",type:"uniform1i",value:this.planetData.getData().debugNoise?1:0},{name:"layerAmount",type:"uniform1i",value:this.planetData.getData().noiseLayers.length},{name:"seed",type:"uniform1i",value:this.planetData.getData().seed}],this.planetData.getData().noiseLayers.length>0&&(t.uniforms=[].concat(Object(m.a)(t.uniforms),[{name:"layerAmplitude",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.amplitude}))},{name:"layerUsePrev",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return e.usePrevLayerAsMask?1:0}))},{name:"layerUseFirst",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return e.useFirstLayerAsMask?1:0}))},{name:"layerMaskOnly",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return e.maskOnly?1:0}))},{name:"layerScale",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.scale}))},{name:"layerMinHeight",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.minHeight}))},{name:"layerNoiseType",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return t=e.noiseType,d.indexOf(t);var t}))},{name:"layerMaskMultiplier",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.maskMultiplier}))},{name:"layerOctaves",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return e.octaves}))},{name:"layerPersistance",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.persistance}))},{name:"layerLacunarity",type:"uniform1fv",value:this.planetData.getData().noiseLayers.map((function(e){return e.lacunarity}))},{name:"layerExponent",type:"uniform1iv",value:this.planetData.getData().noiseLayers.map((function(e){return e.exponent}))}])),t}}]),e}(),T=function(){function e(canvas){var t=this;Object(o.a)(this,e),this.planets=[],this.engine=new h.Engine(canvas),this.scene=this.getNewScene(this.engine,canvas),this.divFps=document.getElementById("divFps"),this.engine.runRenderLoop((function(){t.scene.render(),t.divFps&&(t.divFps.innerHTML=t.engine.getFps().toFixed()+" fps")})),window.addEventListener("resize",(function(){t.engine.resize()}))}return Object(l.a)(e,[{key:"addPlanetFromData",value:function(e){var t;this.planets[0]&&(null===(t=this.planets[0])||void 0===t||t.dispose()),this.planets[0]=new A(this.scene,void 0,new f(e))}},{key:"addPlanet",value:function(){var e;this.planets[0]&&(null===(e=this.planets[0])||void 0===e||e.dispose()),this.planets[0]=new A(this.scene)}},{key:"getNewScene",value:function(e,canvas){var t=new h.Scene(e),n=new h.ArcRotateCamera("Camera",Math.PI/4,Math.PI/4,4,h.Vector3.Zero(),t);n.wheelDeltaPercentage=.01,n.minZ=0,n.setTarget(h.Vector3.Zero()),n.attachControl(canvas,!1);new h.HemisphericLight("light1",new h.Vector3(0,1,0),t);var r=h.MeshBuilder.CreateGround("ground1",{width:12,height:12,subdivisions:6,updatable:!1},t),o=new h.StandardMaterial("texture",t);return o.wireframe=!0,r.material=o,r.position.y=-2,t.clearColor=new h.Color4(15/255,15/255,15/255),t}},{key:"dispose",value:function(){this.planets.forEach((function(e){return e.dispose()}))}}]),e}(),w=r.a.extend({name:"IndexPage",data:function(){var data={universe:void 0};return data},mounted:function(){var canvas=document.getElementById("animation_canvas");this.universe=new T(canvas)},methods:{upload:function(e){var t=this,n=new FileReader;n.readAsText(e.target.files[0]),n.onload=function(){var e;if("string"==typeof n.result){var data=JSON.parse(n.result);null===(e=t.universe)||void 0===e||e.addPlanetFromData(data)}}},add_planet:function(){var e;null===(e=this.universe)||void 0===e||e.addPlanet()}},destroyed:function(){var e;null===(e=this.universe)||void 0===e||e.dispose()}}),S=(n(359),n(41)),component=Object(S.a)(w,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"main_container"}},[n("router-link",{attrs:{id:"home-link",to:"/"}},[e._v("home")]),e._v(" "),n("div",{attrs:{id:"planet_adders"}},[n("input",{attrs:{type:"file",minlength:"1",id:"file_upload"},on:{change:e.upload}}),e._v(" "),n("input",{attrs:{type:"button",minlength:"1",id:"add_planet",value:"add empty planet"},on:{click:e.add_planet}})]),e._v(" "),n("div",{attrs:{id:"divFps"}},[e._v("fps: ")]),e._v(" "),e._m(0)],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"animation_container"}},[t("canvas",{staticClass:"webgl",attrs:{id:"animation_canvas"}})])}],!1,null,"c931d474",null);t.default=component.exports}}]);