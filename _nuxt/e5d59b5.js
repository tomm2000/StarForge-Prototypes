(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{231:function(e,t,n){"use strict";function r(e){return r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},r(e)}n.d(t,"a",(function(){return r}))},232:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(31),o=n(234);function l(e,t){if(t&&("object"===Object(r.a)(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Object(o.a)(e)}},233:function(e,t,n){"use strict";function r(e,p){return r=Object.setPrototypeOf||function(e,p){return e.__proto__=p,e},r(e,p)}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&r(e,t)}n.d(t,"a",(function(){return o}))},234:function(e,t,n){"use strict";function r(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}n.d(t,"a",(function(){return r}))},235:function(e,t,n){var r=n(3);e.exports=r(1..valueOf)},236:function(e,t,n){var r=n(6),o=n(21),l=n(58),c=n(297),h=n(181),f=n(8),v=n(14),d=n(46),m=n(4),y=o("Reflect","construct"),x=Object.prototype,_=[].push,E=m((function(){function e(){}return!(y((function(){}),[],e)instanceof e)})),M=!m((function(){y((function(){}))})),w=E||M;r({target:"Reflect",stat:!0,forced:w,sham:w},{construct:function(e,t){h(e),f(t);var n=arguments.length<3?e:h(arguments[2]);if(M&&!E)return y(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return l(_,r,t),new(l(c,e,r))}var o=n.prototype,m=d(v(o)?o:x),w=l(e,m,t);return v(w)?w:m}})},237:function(e,t,n){n(271)("Float32",(function(e){return function(data,t,n){return e(this,data,t,n)}}))},238:function(e,t,n){"use strict";var r=n(6),o=n(1),l=n(3),c=n(44),h=n(235),f=n(179),v=n(4),d=o.RangeError,m=o.String,y=Math.floor,x=l(f),_=l("".slice),E=l(1..toFixed),M=function(e,t,n){return 0===t?n:t%2==1?M(e,t-1,n*e):M(e*e,t/2,n)},w=function(data,e,t){for(var n=-1,r=t;++n<6;)r+=e*data[n],data[n]=r%1e7,r=y(r/1e7)},T=function(data,e){for(var t=6,n=0;--t>=0;)n+=data[t],data[t]=y(n/e),n=n%e*1e7},A=function(data){for(var e=6,s="";--e>=0;)if(""!==s||0===e||0!==data[e]){var t=m(data[e]);s=""===s?t:s+x("0",7-t.length)+t}return s};r({target:"Number",proto:!0,forced:v((function(){return"0.000"!==E(8e-5,3)||"1"!==E(.9,0)||"1.25"!==E(1.255,2)||"1000000000000000128"!==E(0xde0b6b3a7640080,0)}))||!v((function(){E({})}))},{toFixed:function(e){var t,n,r,o,l=h(this),f=c(e),data=[0,0,0,0,0,0],v="",y="0";if(f<0||f>20)throw d("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return m(l);if(l<0&&(v="-",l=-l),l>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(l*M(2,69,1))-69)<0?l*M(2,-t,1):l/M(2,t,1),n*=4503599627370496,(t=52-t)>0){for(w(data,0,n),r=f;r>=7;)w(data,1e7,0),r-=7;for(w(data,M(10,r,1),0),r=t-1;r>=23;)T(data,1<<23),r-=23;T(data,1<<r),w(data,1,1),T(data,2),y=A(data)}else w(data,0,n),w(data,1<<-t,0),y=A(data)+x("0",f);return y=f>0?v+((o=y.length)<=f?"0."+x("0",f-o)+y:_(y,0,o-f)+"."+_(y,o-f)):v+y}})},265:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(108);var o=n(137),l=n(75);function c(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||Object(o.a)(e)||Object(l.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},274:function(e,t,n){"use strict";var r=n(11),o=n(1),l=n(3),c=n(103),h=n(16),f=n(13),v=n(178),d=n(35),m=n(104),y=n(180),x=n(4),_=n(67).f,E=n(28).f,M=n(15).f,w=n(235),T=n(275).trim,A="Number",S=o.Number,k=S.prototype,R=o.TypeError,P=l("".slice),F=l("".charCodeAt),N=function(e){var t=y(e,"number");return"bigint"==typeof t?t:U(t)},U=function(e){var t,n,r,o,l,c,h,code,f=y(e,"number");if(m(f))throw R("Cannot convert a Symbol value to a number");if("string"==typeof f&&f.length>2)if(f=T(f),43===(t=F(f,0))||45===t){if(88===(n=F(f,2))||120===n)return NaN}else if(48===t){switch(F(f,1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+f}for(c=(l=P(f,2)).length,h=0;h<c;h++)if((code=F(l,h))<48||code>o)return NaN;return parseInt(l,r)}return+f};if(c(A,!S(" 0o1")||!S("0b1")||S("+0x1"))){for(var D,O=function(e){var t=arguments.length<1?0:S(N(e)),n=this;return d(k,n)&&x((function(){w(n)}))?v(Object(t),n,O):t},L=r?_(S):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),I=0;L.length>I;I++)f(S,D=L[I])&&!f(O,D)&&M(O,D,E(S,D));O.prototype=k,k.constructor=O,h(o,A,O)}},275:function(e,t,n){var r=n(3),o=n(20),l=n(12),c=n(276),h=r("".replace),f="["+c+"]",v=RegExp("^"+f+f+"*"),d=RegExp(f+f+"*$"),m=function(e){return function(t){var n=l(o(t));return 1&e&&(n=h(n,v,"")),2&e&&(n=h(n,d,"")),n}};e.exports={start:m(1),end:m(2),trim:m(3)}},276:function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},297:function(e,t,n){"use strict";var r=n(1),o=n(3),l=n(53),c=n(14),h=n(13),f=n(69),v=n(73),d=r.Function,m=o([].concat),y=o([].join),x={},_=function(e,t,n){if(!h(x,t)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";x[t]=d("C,a","return new C("+y(r,",")+")")}return x[t](e,n)};e.exports=v?d.bind:function(e){var t=l(this),n=t.prototype,r=f(arguments,1),o=function(){var n=m(r,f(arguments));return this instanceof o?_(t,n.length,n):t.apply(e,n)};return c(n)&&(o.prototype=n),o}},324:function(e,t,n){var content=n(362);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(100).default)("27666b17",content,!0,{sourceMap:!1})},361:function(e,t,n){"use strict";n(324)},362:function(e,t,n){var r=n(99)(!1);r.push([e.i,"#main_container[data-v-8440d180]{background-color:#3a3a98;height:100vh;width:100vw;padding:1rem;box-sizing:border-box;display:grid;grid-template-rows:1fr 1fr 14fr 1fr}#home-link[data-v-8440d180]{color:#fff;grid-row:1;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}#planet_adders[data-v-8440d180]{grid-row:2}#add_planet[data-v-8440d180],#file_upload[data-v-8440d180]{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}#add_planet[data-v-8440d180]{margin-left:10em}#animation_container[data-v-8440d180]{grid-row:3;display:flex;justify-content:center}canvas[data-v-8440d180]{width:100%;max-width:90%;max-height:90%}",""]),e.exports=r},407:function(e,t,n){"use strict";n.r(t);var r=n(2),o=n(131),l=n(132),c=(n(238),n(19),n(33),n(230)),h=(n(177),n(54),n(39),n(55),n(42),n(26),n(34),n(56),n(57),n(43),n(270));function f(e){e.parent?f(e.parent):e.destroy()}var v=["basic","positive","ridge","mask"];function d(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return m(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return m(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return l=e.done,e},e:function(e){c=!0,o=e},f:function(){try{l||null==n.return||n.return()}finally{if(c)throw o}}}}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var y=function(){function e(){var data=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;Object(o.a)(this,e),this.data={type:"terrestrial1",radius:1,seed:Math.floor(9999*Math.random()),noiseLayers:[],debugNoise:!1,materialId:"XRRVZX#49",materialHeightMultiplier:1,waterLevel:0,oceanDepth:1,oceanFloor:-.2},this.noise_guis=[],data&&(this.data=data)}return Object(l.a)(e,[{key:"getData",value:function(){return this.data}},{key:"setData",value:function(data){this.data=data}},{key:"addNoiseLayer",value:function(){var e=this.data.noiseLayers.length;this.data.noiseLayers[e]=function(e){return{noiseType:"basic",amplitude:1,minHeight:0,scale:1,octaves:1,persistance:.5,lacunarity:2,exponent:1,prevMaskUse:0,firstMaskUse:0,maskOnly:!1,maskMultiplier:1,index:e}}(e),this.updateNoiseGuis()}},{key:"removeNoiseLayer",value:function(e){var t=this.data.noiseLayers.indexOf(e);this.data.noiseLayers.splice(t,1),this.updateNoiseGuis()}},{key:"updateNoiseGuis",value:function(){var e=this;this.noise_guis.forEach((function(e){return f(e)})),this.noise_guis=[];var t,n=0,r=d(this.data.noiseLayers);try{var o=function(){var r=t.value,o=new h.a;r.index=n,function(data,e,t){var n=e.addFolder(t),r=n.addFolder("generation options");r.add(data,"noiseType",v),r.add(data,"amplitude",-1,1,.01),r.add(data,"scale",.1,5,.01),r.add(data,"minHeight",-1,1,.001),r.add(data,"octaves",1,10,1),r.add(data,"persistance",.1,1,.001),r.add(data,"lacunarity",.1,3,.1),r.add(data,"exponent",1,5,1),r.open();var o=n.addFolder("mask options");o.add(data,"maskMultiplier",.1,10,.1),o.add(data,"maskOnly"),o.add(data,"prevMaskUse",-1,1,1),o.add(data,"firstMaskUse",-1,1,1)}(r,o,"layer ".concat(r.index));var l=e.removeNoiseLayer.bind(e);o.add({remove:function(){l(r)}},"remove"),e.noise_guis.push(o),n++};for(r.s();!(t=r.n()).done;)o()}catch(e){r.e(e)}finally{r.f()}}},{key:"generateGUI",value:function(e){e.add(this.data,"radius",.1,2,.01),e.add(this.data,"waterLevel",-1,1,.01),e.add(this.data,"oceanDepth",0,5,.01),e.add(this.data,"oceanFloor",-1,0,.01),e.add(this.data,"seed",0,9999),e.add(this.data,"materialHeightMultiplier",0,1,.01),e.add(this,"addNoiseLayer"),e.add(this,"downloadJson"),this.updateNoiseGuis()}},{key:"downloadJson",value:function(){var e,text,element;e="planet_data.json",text=JSON.stringify(this.getData()),(element=document.createElement("a")).setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(text)),element.setAttribute("download",e),element.style.display="none",document.body.appendChild(element),element.click(),document.body.removeChild(element)}},{key:"dispose",value:function(){this.noise_guis.forEach((function(e){return f(e)})),this.noise_guis=[]}}]),e}(),x=(n(236),n(233)),_=n(232),E=n(231);n(101);function M(e,t,n){if(e&&e instanceof c.NodeMaterial){var r=e.getBlockByName(t);if(r&&r instanceof c.InputBlock)return r.value=n,e}}var w=n(265),T=(n(66),n(45),n(274),n(239),n(237),n(240),n(241),n(242),n(243),n(244),n(245),n(246),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262),function(){function e(t){var n=t.gl,r=t.height,l=t.width;if(Object(o.a)(this,e),this.framebuffer=null,this.program=null,this.ready=!1,this.height=r,this.width=l,this.attribs={},this.uniforms={},this.textures=[],this.standardGeometryVals=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]),this.standardVertex="\n            attribute vec3 position;\n            attribute vec2 textureCoord;\n            varying highp vec2 vTextureCoord;\n            void main() {\n                gl_Position = vec4(position, 1.0);\n                vTextureCoord = textureCoord;\n            }\n        ",n)this.gl=n,this.height=n.drawingBufferHeight,this.width=n.drawingBufferWidth;else{var canvas=document.createElement("canvas");canvas.width=l,canvas.height=r,this.gl=canvas.getContext("webgl",{premultipliedAlpha:!1})}this.gl.getExtension("OES_texture_float")||alert("Floating point textures not supported")}return Object(l.a)(e,[{key:"makeTexture",value:function(data){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.width,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.height;this.textures.push({tex:this.gl.createTexture(),width:e,height:t}),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[this.textures.length-1].tex),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.FLOAT,data)}},{key:"updateTexture",value:function(data){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.textures[e];this.gl.bindTexture(this.gl.TEXTURE_2D,t.tex),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t.width,t.height,0,this.gl.RGBA,this.gl.FLOAT,data)}},{key:"makeFrameBuffer",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.width,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.height,n=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,n),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.FLOAT,null),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.framebuffer=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,n,0);var r=this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);if(r!=this.gl.FRAMEBUFFER_COMPLETE)switch(r){case this.gl.FRAMEBUFFER_UNSUPPORTED:throw"FRAMEBUFFER_UNSUPPORTED";case this.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case this.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case this.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";default:throw"Framebuffer error: ".concat(r)}}},{key:"buildProgram",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.standardVertex;this.program=this.gl.createProgram();var n=this.compileShader(t,this.gl.VERTEX_SHADER),r=this.compileShader(e,this.gl.FRAGMENT_SHADER);this.gl.attachShader(this.program,n),this.gl.attachShader(this.program,r),this.gl.linkProgram(this.program),this.gl.deleteShader(r),this.gl.deleteShader(n),this.gl.useProgram(this.program);var o=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.standardGeometryVals,this.gl.STATIC_DRAW)}},{key:"compileShader",value:function(source,e){var t=this.gl.createShader(e);if(this.gl.shaderSource(t,source),this.gl.compileShader(t),!this.gl.getShaderParameter(t,this.gl.COMPILE_STATUS))throw"".concat(e," compilation failed: ").concat(this.gl.getShaderInfoLog(t));return t}},{key:"addAttrib",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.numElements,r=void 0===n?3:n,o=t.stride,l=void 0===o?20:o,c=t.offset,h=void 0===c?0:c;this.gl.useProgram(this.program),this.attribs[e]=this.gl.getAttribLocation(this.program,e),this.gl.enableVertexAttribArray(this.attribs[e]),this.gl.vertexAttribPointer(this.attribs[e],r,this.gl.FLOAT,!1,l,h)}},{key:"addUniform",value:function(e){var t=e.name,n=e.type,r=e.value;this.uniforms[t]=this.gl.getUniformLocation(this.program,t),null!=r&&this.gl[n](this.uniforms[t],r)}},{key:"draw",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.textures[this.textures.length-1];if(this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,e.tex),!this.ready){this.ready=!0,this.addUniform({name:"texture0",value:0,type:"uniform1i"});for(var t=e==this.textures[this.textures.length-1]?this.textures.length-1:this.textures.length,n=0;n<t;n++)this.gl.activeTexture(this.gl["TEXTURE".concat(n+1)]),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[n].tex),this.addUniform({name:"texture".concat(n+1),value:n+1,type:"uniform1i"});this.gl.activeTexture(this.gl.TEXTURE0)}this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}},{key:"getPixels",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.width-e,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.height-t,o=new Float32Array(n*r*4);return this.gl.readPixels(e,t,n,r,this.gl.RGBA,this.gl.FLOAT,o),o}},{key:"delete",value:function(){var e;this.gl.deleteProgram(this.program),this.gl.deleteFramebuffer(this.framebuffer);for(var t=0;t<this.textures.length;t++)this.gl.deleteTexture(this.textures[t].tex),this.textures.splice(t,1);null===(e=this.gl.getExtension("WEBGL_lose_context"))||void 0===e||e.loseContext()}}]),e}()),A=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:void 0;Object(o.a)(this,e),this.minHeight=0,this.maxHeight=0,this.resolution=n,this.scene=t,this.positionShader=r,this.positionUniforms=l,this.material=c}return Object(l.a)(e,[{key:"getResolution",value:function(){return this.resolution}},{key:"setResolution",value:function(e){this.resolution=e}},{key:"getMaterial",value:function(){return this.material}},{key:"setMaterial",value:function(e){this.mesh&&(this.material=e,this.mesh.material=this.material)}},{key:"getPositionShader",value:function(){return this.positionShader}},{key:"setPositionShader",value:function(e){var t;this.positionShader=e,null===(t=this.GPGPU)||void 0===t||t.buildProgram(e.fragmentSource,e.vertexSource)}},{key:"getPositionUniforms",value:function(){return this.positionUniforms}},{key:"setPositionUniforms",value:function(e){this.positionUniforms=e}},{key:"getMinHeight",value:function(){return this.minHeight}},{key:"getMaxHeight",value:function(){return this.maxHeight}},{key:"updateMesh",value:function(){var e=this;if(this.mesh&&this.GPGPU&&this.originalMeshData&&this.positionShader&&this.positionUniforms){this.positionShader;var t=this.positionUniforms,n=this.originalMeshData,r=this.GPGPU;this.mesh.updateMeshPositions((function(data){t.forEach((function(e){r.addUniform(e)})),r.draw();for(var o=r.getPixels(),l=Number.MIN_VALUE,c=Number.MAX_VALUE,i=0;i<o.length/4;i++){var h=o[4*i+3];data[3*i+0]=(2*n[4*i+0]-1)/h,data[3*i+1]=(2*n[4*i+1]-1)/h,data[3*i+2]=(2*n[4*i+2]-1)/h,l=Math.max(l,1/h),c=Math.min(c,1/h)}e.minHeight=c,e.maxHeight=l}),!0)}}},{key:"generateNewMesh",value:function(){var e=this;if(!this.positionShader||!this.positionUniforms)throw"missing values in ico sphere mesh!";var t=this.positionShader,n=this.positionUniforms,r=this.resolution,o=this.scene;return this.mesh=c.MeshBuilder.CreateIcoSphere("icosphere",{subdivisions:r,updatable:!0,flat:!1},o),this.mesh.forceSharedVertices(),this.mesh.updateMeshPositions((function(data){var r=data.length/3*4;e.originalMeshData=new Float32Array(r);for(var i=0;i<data.length/3;i++)e.originalMeshData[4*i+0]=(data[3*i+0]+1)/2,e.originalMeshData[4*i+1]=(data[3*i+1]+1)/2,e.originalMeshData[4*i+2]=(data[3*i+2]+1)/2,e.originalMeshData[4*i+3]=1;if(null==e.meshTextureDimension){for(var o=Math.floor(Math.sqrt(r/4));r/4%o!=0;)o-=1;e.meshTextureDimension=o}e.GPGPU=new T({width:r/4/e.meshTextureDimension,height:e.meshTextureDimension}),e.GPGPU.makeFrameBuffer(r/4/e.meshTextureDimension,e.meshTextureDimension),e.GPGPU.makeTexture(e.originalMeshData),e.GPGPU.buildProgram(t.fragmentSource,t.vertexSource),e.GPGPU.addAttrib("position",{numElements:3,stride:20,offset:0}),e.GPGPU.addAttrib("textureCoord",{numElements:2,stride:20,offset:12}),n.forEach((function(t){var n;null===(n=e.GPGPU)||void 0===n||n.addUniform(t)})),e.GPGPU.draw();for(var l=e.GPGPU.getPixels(),c=Number.MIN_VALUE,h=Number.MAX_VALUE,f=0;f<l.length/4;f++){var v=l[4*f+3];data[3*f+0]=(2*e.originalMeshData[4*f+0]-1)/v,data[3*f+1]=(2*e.originalMeshData[4*f+1]-1)/v,data[3*f+2]=(2*e.originalMeshData[4*f+2]-1)/v,c=Math.max(c,1/v),h=Math.min(h,1/v)}e.minHeight=h,e.maxHeight=c}),!0),this.mesh}},{key:"dispose",value:function(){var e,t;null===(e=this.GPGPU)||void 0===e||e.delete(),null===(t=this.mesh)||void 0===t||t.dispose()}}]),e}(),S=function(){function e(t){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new y;Object(o.a)(this,e),this.autoUpdate=!1,this.scene=t,this.planetData=r,this.gui=this.createGui(),this.icoSphereMesh=new A(this.scene,void 0,this.getPositionShader(),this.getPositionUniforms()),c.NodeMaterial.ParseFromSnippetAsync(this.planetData.getData().materialId,this.scene).then((function(e){n.icoSphereMesh.setMaterial(e),n.updateMaterialNodes()})),this.icoSphereMesh.generateNewMesh(),this.updateInterval=setInterval((function(){n.autoUpdate&&n.reload()}),16)}return Object(l.a)(e,[{key:"createGui",value:function(){var e=new h.a;return e.add(this,"reload"),e.add(this,"autoUpdate"),this.planetData.generateGUI(e),e}},{key:"destroyGui",value:function(){this.gui.destroy()}},{key:"reloadGui",value:function(){this.destroyGui(),this.gui=this.createGui()}},{key:"setPlanetData",value:function(e){this.planetData.setData(e),this.reloadGui(),this.reload()}},{key:"updateMaterialNodes",value:function(){}},{key:"getPlanetData",value:function(){return this.planetData.getData()}},{key:"getPositionShader",value:function(){return{fragmentSource:"",vertexSource:""}}},{key:"getPositionUniforms",value:function(){var e=[{name:"radius",type:"uniform1f",value:this.planetData.getData().radius},{name:"layerAmount",type:"uniform1i",value:this.planetData.getData().noiseLayers.length},{name:"seed",type:"uniform1i",value:this.planetData.getData().seed},{name:"waterLevel",type:"uniform1f",value:this.planetData.getData().waterLevel},{name:"oceanDepth",type:"uniform1f",value:this.planetData.getData().oceanDepth},{name:"oceanFloor",type:"uniform1f",value:this.planetData.getData().oceanFloor}],t=this.planetData.getData().noiseLayers;return t.length>0&&(e=[].concat(Object(w.a)(e),[{name:"layerPrevMask",type:"uniform1iv",value:t.map((function(e){return e.prevMaskUse}))},{name:"layerFirstMask",type:"uniform1iv",value:t.map((function(e){return e.firstMaskUse}))},{name:"layerMaskOnly",type:"uniform1iv",value:t.map((function(e){return e.maskOnly?1:0}))},{name:"layerNoiseType",type:"uniform1iv",value:t.map((function(e){return t=e.noiseType,v.indexOf(t);var t}))},{name:"layerOctaves",type:"uniform1iv",value:t.map((function(e){return e.octaves}))},{name:"layerExponent",type:"uniform1iv",value:t.map((function(e){return e.exponent}))},{name:"layerAmplitude",type:"uniform1fv",value:t.map((function(e){return e.amplitude}))},{name:"layerScale",type:"uniform1fv",value:t.map((function(e){return e.scale}))},{name:"layerMinHeight",type:"uniform1fv",value:t.map((function(e){return e.minHeight}))},{name:"layerMaskMultiplier",type:"uniform1fv",value:t.map((function(e){return e.maskMultiplier}))},{name:"layerPersistance",type:"uniform1fv",value:t.map((function(e){return e.persistance}))},{name:"layerLacunarity",type:"uniform1fv",value:t.map((function(e){return e.lacunarity}))}])),e}},{key:"reload",value:function(){this.icoSphereMesh.setPositionUniforms(this.getPositionUniforms()),this.icoSphereMesh.updateMesh(),this.updateMaterialNodes()}},{key:"dispose",value:function(){this.updateInterval&&clearInterval(this.updateInterval),this.icoSphereMesh.dispose(),this.gui.destroy(),this.planetData.dispose()}}]),e}();function k(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Object(E.a)(e);if(t){var o=Object(E.a)(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Object(_.a)(this,n)}}var R=function(e){Object(x.a)(n,e);var t=k(n);function n(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new y;return Object(o.a)(this,n),t.call(this,e,r)}return Object(l.a)(n,[{key:"updateMaterialNodes",value:function(){var e=this.icoSphereMesh.getMaterial();M(e,"INheightMultiplier",this.planetData.getData().materialHeightMultiplier),M(e,"INseaLevel",this.planetData.getData().waterLevel),M(e,"INminHeight",this.icoSphereMesh.getMinHeight()),M(e,"INmaxHeight",this.icoSphereMesh.getMaxHeight())}},{key:"getPositionShader",value:function(){var e="\n      precision highp float;\n\n      #define MAX_LAYERS 32\n\n      uniform float radius;\n      uniform int debugNoise;\n      uniform int layerAmount;\n      uniform int seed;\n      uniform float waterLevel;\n      uniform float oceanDepth;\n      uniform float oceanFloor;\n\n      //* integers\n      uniform int   layerPrevMask [MAX_LAYERS];\n      uniform int   layerFirstMask[MAX_LAYERS];\n      uniform int   layerMaskOnly [MAX_LAYERS];\n      uniform int   layerNoiseType[MAX_LAYERS];\n      uniform int   layerOctaves  [MAX_LAYERS];\n      uniform int   layerExponent [MAX_LAYERS];\n\n      //* floats\n      uniform float layerAmplitude     [MAX_LAYERS];\n      uniform float layerScale         [MAX_LAYERS];\n      uniform float layerMinHeight     [MAX_LAYERS];\n      uniform float layerMaskMultiplier[MAX_LAYERS];\n      uniform float layerLacunarity    [MAX_LAYERS];\n      uniform float layerPersistance   [MAX_LAYERS];\n\n      uniform sampler2D texture;\n      varying vec2 vTextureCoord;\n\n      ".concat("\nvec4 permute(vec4 i) {\n  vec4 im = mod(i, 289.0);\n  return mod(((im*34.0)+10.0)*im, 289.0);\n}\n\n// https://github.com/stegu/psrdnoise/\nfloat psrdnoise(vec3 x, vec3 period, float alpha, out vec3 gradient) {\n  const mat3 M = mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0,  1.0, 1.0, 0.0);\n  const mat3 Mi = mat3(-0.5, 0.5, 0.5, 0.5,-0.5, 0.5, 0.5, 0.5,-0.5);\n  vec3 uvw = M * x;\n  vec3 i0 = floor(uvw), f0 = fract(uvw);\n  vec3 g_ = step(f0.xyx, f0.yzz), l_ = 1.0 - g_;\n  vec3 g = vec3(l_.z, g_.xy), l = vec3(l_.xy, g_.z);\n  vec3 o1 = min( g, l ), o2 = max( g, l );\n  vec3 i1 = i0 + o1, i2 = i0 + o2, i3 = i0 + vec3(1.0);\n  vec3 v0 = Mi * i0, v1 = Mi * i1, v2 = Mi * i2, v3 = Mi * i3;\n  vec3 x0 = x - v0, x1 = x - v1, x2 = x - v2, x3 = x - v3;\n  if(any(greaterThan(period, vec3(0.0)))) {\n    vec4 vx = vec4(v0.x, v1.x, v2.x, v3.x);\n    vec4 vy = vec4(v0.y, v1.y, v2.y, v3.y);\n    vec4 vz = vec4(v0.z, v1.z, v2.z, v3.z);\n    if(period.x > 0.0) vx = mod(vx, period.x);\n    if(period.y > 0.0) vy = mod(vy, period.y);\n    if(period.z > 0.0) vz = mod(vz, period.z);\n    i0 = floor(M * vec3(vx.x, vy.x, vz.x) + 0.5);\n    i1 = floor(M * vec3(vx.y, vy.y, vz.y) + 0.5);\n    i2 = floor(M * vec3(vx.z, vy.z, vz.z) + 0.5);\n    i3 = floor(M * vec3(vx.w, vy.w, vz.w) + 0.5);\n  }\n  vec4 hash = permute( permute( permute( \n              vec4(i0.z, i1.z, i2.z, i3.z ))\n            + vec4(i0.y, i1.y, i2.y, i3.y ))\n            + vec4(i0.x, i1.x, i2.x, i3.x ));\n  vec4 theta = hash * 3.883222077;\n  vec4 sz = hash * -0.006920415 + 0.996539792;\n  vec4 psi = hash * 0.108705628;\n  vec4 Ct = cos(theta), St = sin(theta);\n  vec4 sz_prime = sqrt( 1.0 - sz*sz );\n  vec4 gx, gy, gz;\n  if(alpha != 0.0) {\n    vec4 px = Ct * sz_prime, py = St * sz_prime, pz = sz;\n    vec4 Sp = sin(psi), Cp = cos(psi), Ctp = St*Sp - Ct*Cp;\n    vec4 qx = mix( Ctp*St, Sp, sz), qy = mix(-Ctp*Ct, Cp, sz);\n    vec4 qz = -(py*Cp + px*Sp);\n    vec4 Sa = vec4(sin(alpha)), Ca = vec4(cos(alpha));\n    gx = Ca*px + Sa*qx; gy = Ca*py + Sa*qy; gz = Ca*pz + Sa*qz;\n  } else {\n    gx = Ct * sz_prime; gy = St * sz_prime; gz = sz;  \n  }\n  vec3 g0 = vec3(gx.x, gy.x, gz.x), g1 = vec3(gx.y, gy.y, gz.y);\n  vec3 g2 = vec3(gx.z, gy.z, gz.z), g3 = vec3(gx.w, gy.w, gz.w);\n  vec4 w = 0.5-vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3));\n  w = max(w, 0.0); vec4 w2 = w * w, w3 = w2 * w;\n  vec4 gdotx = vec4(dot(g0,x0), dot(g1,x1), dot(g2,x2), dot(g3,x3));\n  float n = dot(w3, gdotx);\n  vec4 dw = -6.0 * w2 * gdotx;\n  vec3 dn0 = w3.x * g0 + dw.x * x0;\n  vec3 dn1 = w3.y * g1 + dw.y * x1;\n  vec3 dn2 = w3.z * g2 + dw.z * x2;\n  vec3 dn3 = w3.w * g3 + dw.w * x3;\n  gradient = 39.5 * (dn0 + dn1 + dn2 + dn3);\n  return 39.5 * n;\n}\n","\n\n      ").concat("\nfloat basicNoiseLayer(\n  /* scale values */\n  float minHeight,\n  float amplitude,\n  float scale,\n\n  /* fractal values */\n  float lacunarity,\n  float persistance,\n  int octaves,\n\n  /* shape values */\n  int exponent,\n\n  /* other value */\n  float mask,\n  vec3 position,\n  int seed\n) {\n  const int MAX_OCTAVES = 32;\n  \n  float total_elevation = 0.0;\n\n  float oct_amplitude = amplitude;\n  float oct_frequency = scale;\n\n\n  for(int i = 0; i < MAX_OCTAVES; i++) {\n    if(i >= octaves) { break; }\n\n    vec3 v = position.xyz * oct_frequency;\n    vec3 p = vec3(0.0);\n    vec3 g;\n    float alpha = 1.0 * float(seed);\n\n    total_elevation += psrdnoise(v, p, alpha, g) * oct_amplitude;\n\n    oct_frequency *= lacunarity;\n    oct_amplitude *= persistance;\n  }\n\n  return total_elevation * mask;\n}\n","\n      ").concat("\nfloat positiveNoiseLayer(\n  /* scale values */\n  float minHeight,\n  float amplitude,\n  float scale,\n\n  /* fractal values */\n  float lacunarity,\n  float persistance,\n  int octaves,\n\n  /* shape values */\n  int exponent,\n\n  /* other value */\n  float mask,\n  vec3 position,\n  int seed\n) {\n  const int MAX_OCTAVES = 32;\n  \n  float total_elevation = 0.0;\n\n  float oct_amplitude = amplitude;\n  float oct_frequency = scale;\n\n\n  for(int i = 0; i < MAX_OCTAVES; i++) {\n    if(i >= octaves) { break; }\n\n    vec3 v = position.xyz * oct_frequency;\n    vec3 p = vec3(0.0);\n    vec3 g;\n    float alpha = 1.0 * float(seed * 30);\n\n    total_elevation += (0.5 + 0.5 * psrdnoise(v, p, alpha, g)) * oct_amplitude;\n\n    oct_frequency *= lacunarity;\n    oct_amplitude *= persistance;\n  }\n\n  return total_elevation * mask;\n}\n","\n      ").concat("\nfloat ridgeNoiseLayer(\n  /* scale values */\n  float minHeight,\n  float amplitude,\n  float scale,\n\n  /* fractal values */\n  float lacunarity,\n  float persistance,\n  int octaves,\n\n  /* shape values */\n  int exponent,\n\n  /* other value */\n  float mask,\n  vec3 position,\n  int seed\n) {\n  const int MAX_OCTAVES = 32;\n  \n  float total_elevation = 0.0;\n\n  float oct_amplitude = amplitude;\n  float oct_frequency = scale;\n\n\n  for(int i = 0; i < MAX_OCTAVES; i++) {\n    if(i >= octaves) { break; }\n\n    vec3 v = position.xyz * oct_frequency;\n    vec3 p = vec3(0.0);\n    vec3 g;\n    float alpha = 1.0 * float(seed);\n\n    total_elevation += psrdnoise(v, p, alpha, g) * oct_amplitude;\n\n    oct_frequency *= lacunarity;\n    oct_amplitude *= persistance;\n  }\n\n  total_elevation = (abs(amplitude) - abs(total_elevation)) * sign(amplitude);\n\n  return total_elevation * mask;\n}\n","\n      ").concat("\nfloat maskNoiseLayer(\n  float vertical_shift,\n  float amplitude,\n  float frequency,\n  vec3 position,\n  int seed\n) {\n  vec3 v = position.xyz * frequency;\n  vec3 p = vec3(0.0);\n  vec3 g;\n  float alpha = 1.0 * float(seed);\n\n  float elevation = psrdnoise(v, p, alpha, g) * amplitude;\n\n  elevation = elevation + vertical_shift;\n\n  elevation = max(0.0, elevation);\n\n  elevation = min(0.5, elevation);\n\n  return elevation * 2.0;\n}\n","\n\n      void main() {\n        // restoring data from [0,1] -> [0,2] -> [-1,1]\n        vec4 position = (texture2D(texture, vTextureCoord) * 2.0) - 1.0;\n\n        float elevation = 0.0;\n        float base_elevation = 0.0;\n        float prev_elevation = 0.0;\n\n        for(int i = 0; i < MAX_LAYERS; i++) {\n          if(i >= layerAmount) { break; }\n\n          // ---- mask setup\n          float mask = 0.0;\n\n          if(layerPrevMask[i] == 0 && layerFirstMask[i] == 0) { \n            mask = 1.0;\n          }\n\n          if       (layerPrevMask[i] ==  1) {\n            mask = prev_elevation;\n          } else if(layerPrevMask[i] == -1) {\n            mask = 1.0 - prev_elevation;\n          }\n\n          if       (layerFirstMask[i] ==  1 && i >= 1) {\n            mask = base_elevation;\n          } else if(layerFirstMask[i] == -1 && i >= 1) {\n            mask = 1.0 - base_elevation;\n          }\n          // ---------------\n\n          // ---- noise generation\n          float level_elevation = 0.0;\n\n          if(layerNoiseType[i] == 0) {\n            level_elevation = basicNoiseLayer(layerMinHeight[i], layerAmplitude[i], layerScale[i], layerLacunarity[i], layerPersistance[i], layerOctaves[i], layerExponent[i], mask, position.xyz, seed + i);\n          } else if(layerNoiseType[i] == 1) {\n            level_elevation = positiveNoiseLayer(layerMinHeight[i], layerAmplitude[i], layerScale[i], layerLacunarity[i], layerPersistance[i], layerOctaves[i], layerExponent[i], mask, position.xyz, seed + i);\n          } else if(layerNoiseType[i] == 2) {\n            level_elevation = ridgeNoiseLayer(layerMinHeight[i], layerAmplitude[i], layerScale[i], layerLacunarity[i], layerPersistance[i], layerOctaves[i], layerExponent[i], mask, position.xyz, seed + i);\n          } else if(layerNoiseType[i] == 3) {\n            level_elevation = maskNoiseLayer(layerMinHeight[i], layerAmplitude[i], layerScale[i], position.xyz, seed + i);\n          }\n          // ---------------------\n\n          // ---- mask and elevation finalization\n          if(i == 0) { base_elevation = level_elevation * layerMaskMultiplier[i]; }\n          prev_elevation = level_elevation * mask * layerMaskMultiplier[i];\n\n          if(layerMaskOnly[i] == 0) { elevation += level_elevation * mask; }\n          // ------------------------------------\n        }\n\n        if(elevation < 0.0) {\n          elevation *= oceanDepth;\n        }\n\n        if(elevation <= oceanFloor) {\n          float extra_elevation = oceanFloor - elevation;\n\n          elevation += extra_elevation;\n\n          extra_elevation /= 5.0;\n\n          elevation -= extra_elevation;\n        }\n\n        elevation += 1.0;\n\n        // normalizing data from [-1,1] -> [0,2] -> [0,1]\n        vec3 pos = (position.xyz + 1.0) / 2.0;\n\n        gl_FragColor = vec4(pos, 1.0 / (elevation * radius));\n        // gl_FragColor = vec4(pos, 1.0 / layerAmplitude[0]);\n      }\n    ");return{fragmentSource:e,vertexSource:"\n    attribute vec3 position;\n    attribute vec2 textureCoord;\n\n    varying highp vec2 vTextureCoord;\n\n    void main() {\n        gl_Position = vec4(position, 1.0);\n        vTextureCoord = textureCoord;\n    }\n    "}}}]),n}(S),P=function(){function e(canvas){var t=this;Object(o.a)(this,e),this.planets=[],this.engine=new c.Engine(canvas),this.scene=this.getNewScene(this.engine,canvas),this.divFps=document.getElementById("divFps"),this.engine.runRenderLoop((function(){t.scene.render(),t.divFps&&(t.divFps.innerHTML=t.engine.getFps().toFixed()+" fps")})),window.addEventListener("resize",(function(){t.engine.resize()}));for(var i=0;i<1;i++)this.planets.push(new R(this.scene))}return Object(l.a)(e,[{key:"addPlanetFromData",value:function(e){var t;this.planets[0]&&(null===(t=this.planets[0])||void 0===t||t.dispose()),this.planets[0]=new R(this.scene,new y(e))}},{key:"addPlanet",value:function(){var e;this.planets[0]&&(null===(e=this.planets[0])||void 0===e||e.dispose()),this.planets[0]=new R(this.scene)}},{key:"getNewScene",value:function(e,canvas){var t=new c.Scene(e),n=new c.ArcRotateCamera("Camera",Math.PI/4,Math.PI/4,4,c.Vector3.Zero(),t);n.wheelDeltaPercentage=.01,n.minZ=0,n.setTarget(c.Vector3.Zero()),n.attachControl(canvas,!1);new c.HemisphericLight("light1",new c.Vector3(0,1,0),t);var r=c.MeshBuilder.CreateGround("ground1",{width:12,height:12,subdivisions:6,updatable:!1},t),o=new c.StandardMaterial("texture",t);return o.wireframe=!0,r.material=o,r.position.y=-2,t.clearColor=new c.Color4(15/255,15/255,15/255),t}},{key:"dispose",value:function(){this.planets.forEach((function(e){return e.dispose()})),this.scene.dispose(),this.engine.dispose()}}]),e}(),F=r.a.extend({name:"IndexPage",data:function(){var data={universe:void 0};return data},mounted:function(){var canvas=document.getElementById("animation_canvas");this.universe=new P(canvas)},methods:{upload:function(e){var t=this,n=new FileReader;n.readAsText(e.target.files[0]),n.onload=function(){var e;if("string"==typeof n.result){var data=JSON.parse(n.result);null===(e=t.universe)||void 0===e||e.addPlanetFromData(data)}}},add_planet:function(){var e;null===(e=this.universe)||void 0===e||e.addPlanet()}},destroyed:function(){var e;null===(e=this.universe)||void 0===e||e.dispose()}}),N=(n(361),n(41)),component=Object(N.a)(F,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"main_container"}},[n("router-link",{attrs:{id:"home-link",to:"/"}},[e._v("home")]),e._v(" "),n("div",{attrs:{id:"planet_adders"}},[n("input",{attrs:{type:"file",minlength:"1",id:"file_upload"},on:{change:e.upload}}),e._v(" "),n("input",{attrs:{type:"button",minlength:"1",id:"add_planet",value:"add empty planet"},on:{click:e.add_planet}})]),e._v(" "),n("div",{attrs:{id:"divFps"}},[e._v("fps: ")]),e._v(" "),e._m(0)],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"animation_container"}},[t("canvas",{staticClass:"webgl",attrs:{id:"animation_canvas"}})])}],!1,null,"8440d180",null);t.default=component.exports}}]);